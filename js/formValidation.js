// formValidation.js ‚Äî Valida√ß√£o e feedback visual de formul√°rio

// Fun√ß√£o simples para verificar a validade estrutural de um CPF (sem d√≠gitos verificadores)
function isCPFValido(cpf) {
    // Remove caracteres n√£o num√©ricos
    const limpo = cpf.replace(/[^\d]/g, ''); 
    // Aceita 11 d√≠gitos
    return limpo.length === 11;
}

export function validarFormulario(event) {
    event.preventDefault();

    const campos = event.target.querySelectorAll("input[required]");
    let valido = true;

    campos.forEach(campo => {
        removerAviso(campo); // Limpa avisos anteriores
        
        // 1. Valida√ß√£o de Campo Vazio
        if (!campo.value.trim()) {
            valido = false;
            mostrarAviso(campo, "Campo obrigat√≥rio!");
            return;
        }

        // 2. Valida√ß√£o de CPF Espec√≠fica
        if (campo.id === 'cpf' && !isCPFValido(campo.value)) {
            valido = false;
            mostrarAviso(campo, "CPF inv√°lido ou incompleto (ex: 000.000.000-00).");
            return;
        }
        
        // 3. Valida√ß√£o de E-mail (se HTML5 pattern n√£o for suficiente)
        // (A valida√ß√£o nativa do input type="email" geralmente √© suficiente)

        // Se passar, remove erro visual (classe 'erro' precisa de CSS)
        campo.classList.remove("erro");
    });

    if (valido) {
        // Usa a classe 'sucesso' para feedback visual (requer CSS)
        alert("üéâ Cadastro enviado com sucesso! Retornando ao In√≠cio.");
        event.target.reset();

        // Volta para a p√°gina inicial
        navegarPara('index.html');
    }
}

function mostrarAviso(campo, mensagem) {
    campo.classList.add("erro");
    const span = document.createElement("span");
    span.className = "aviso erro-texto"; // Classe para feedback visual (requer CSS)
    span.setAttribute('aria-live', 'assertive'); // Acessibilidade: ler aviso
    span.textContent = mensagem;
    campo.insertAdjacentElement("afterend", span);
}

function removerAviso(campo) {
    campo.classList.remove("erro");
    const aviso = campo.parentNode.querySelector(".erro-texto");
    if (aviso) aviso.remove();
}